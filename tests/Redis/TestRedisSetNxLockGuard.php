<?php

/**
 * Created by PhpStorm.
 * User: 陈思池 <925.andrewchan@gmail.com>
 * Time: 27/10/2017 6:34 PM
 */
namespace Cmexpro\Common\Lib\Redis;

use Cmexpro\Common\Lib\Config\CFG;
use PHPUnit_Framework_TestCase;

class TestRedisSetNxLockGuard extends PHPUnit_Framework_TestCase
{

    public function __construct($name = null, array $data = array(), $dataName = '')
    {
        parent::__construct($name, $data, $dataName);
        CFG::mergeCFG(array(
            'redis' => array(
                'jjb' => array(
                    'host' => '127.0.0.1',
                    'port' => 6379,
                    'index' => 0,
                    'auth' => null
                )
            ),
            'log' => array(
                'category' => 'composer.common-lib.redis-lock',
                'file_base_name' => '/tmp/logs/common-lib/redis-lock/'
            )
        ));
    }

    public function testConstructLock()
    {
        $locked = new RedisSetNxLockGuard('jjb', 'test_lock_name', 1, 30);
        $this->assertEquals(1, RedisHelper::getConn('jjb')->get('test_lock_name'));

        unset($locked);
        $this->assertFalse(RedisHelper::getConn('jjb')->get('test_lock_name'));
    }

    /**
     * @expectedException \Exception
     */
    public function testTryLock()
    {
        $locked = new RedisSetNxLockGuard('jjb', 'test_lock_name', 1, 30);
        $tryLock = new RedisSetNxLockGuard('jjb', 'test_lock_name', 1, 30, 2);
    }

    public function testDestructUnlock()
    {
        $lockedValue = RedisHelper::getConn('jjb')->get('test_lock_name');

        $this->assertFalse($lockedValue);
    }

    /**
     * @expectedException \Exception
     */
    public function testUnlockExp()
    {
        $value = '123456';

        $locked = new RedisSetNxLockGuard('jjb', 'test_lock_name', $value, 30);
        $this->assertEquals($value, RedisHelper::getConn('jjb')->get('test_lock_name'));

        RedisHelper::getConn('jjb')->set('test_lock_name', 'abcd'); // 强制修改lock内部值
        try {
            unset($locked); // lock内部值改变后, 解锁失败 抛异常
        } catch (\Exception $e) {
            RedisHelper::getConn('jjb')->del('test_lock_name'); // 手工解锁
            throw $e;
        } // todo finally
    }

    /**
     * @expectedException \Exception
     */
    public function testUnlockExp2()
    {
        $value = '123456';

        $locked = new RedisSetNxLockGuard('jjb', 'test_lock_name', $value, 30);
        $this->assertEquals($value, RedisHelper::getConn('jjb')->get('test_lock_name'));

        RedisHelper::getConn('jjb')->del('test_lock_name'); // 手工解锁
        try {
            unset($locked); // lock内部值改变后, 解锁失败 抛异常
        } catch (\Exception $e) {
            throw $e;
        } // todo finally
    }

    public function tearDown()
    {
        @rmdir('/tmp/logs/common-lib/redis-lock/');
        @rmdir('/tmp/logs/common-lib/');
        @rmdir('/tmp/logs/');
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
